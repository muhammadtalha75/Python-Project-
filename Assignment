import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Generate or load dataset (for demonstration purpose, let's generate a sample dataset)
np.random.seed(0)
advertising_spending = np.random.randint(1000, 5000, 100)
sales_figures = 100 + 2 * advertising_spending + np.random.normal(0, 500, 100)

# Task 1: Data Loading and Array Operations
mean_spending = np.mean(advertising_spending)
median_spending = np.median(advertising_spending)
std_spending = np.std(advertising_spending)

mean_sales = np.mean(sales_figures)
median_sales = np.median(sales_figures)
std_sales = np.std(sales_figures)

print("Advertising Spending Statistics:")
print("Mean:", mean_spending)
print("Median:", median_spending)
print("Standard Deviation:", std_spending)

print("\nSales Figures Statistics:")
print("Mean:", mean_sales)
print("Median:", median_sales)
print("Standard Deviation:", std_sales)

# Task 2: Data Visualization
plt.figure(figsize=(10, 6))
plt.scatter(advertising_spending, sales_figures, color='blue')
plt.title('Relationship between Advertising Spending and Sales')
plt.xlabel('Advertising Spending')
plt.ylabel('Sales Figures')
plt.grid(True)
plt.show()

# Task 3: Simple Linear Regression
model = LinearRegression()
model.fit(advertising_spending.reshape(-1, 1), sales_figures)

print("\nRegression Coefficients:")
print("Intercept:", model.intercept_)
print("Coefficient:", model.coef_[0])

# Plotting the regression line
plt.figure(figsize=(10, 6))
plt.scatter(advertising_spending, sales_figures, color='blue')
plt.plot(advertising_spending, model.predict(advertising_spending.reshape(-1, 1)), color='red', linewidth=2)
plt.title('Simple Linear Regression')
plt.xlabel('Advertising Spending')
plt.ylabel('Sales Figures')
plt.grid(True)
plt.show()
